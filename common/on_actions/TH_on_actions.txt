on_actions = {
	# country 
	on_new_term_election = {

	}

	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {

	}

	# country, FROM = ace, PREV = enemy ace 
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {

	}
	
	# country, FROM = our ace, 
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {

	}

	# country, FROM = our ace, 
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {

	}

	# country, FROM = ace
	on_ace_killed = {

	}

	# During justifying wargoals
	# triggered daily, so make sure there is a sink somewhere not firing events
	# country, FROM = target nation
	on_justifying_wargoal_pulse = {


	}

	on_wargoal_expire = {

	}

	on_nuke_drop = {
		effect = {
			set_global_flag = first_nuke_dropped
			if = {
				limit = { NOT = { has_global_flag = first_nuke_dropped } }
				country_event = { id = generic.8 }
			}
		}
	}

	# country random events
	#on_bi_yearly_pulse = {
	#
	#}

	#on_five_year_pulse = {
	#
	#}

	on_border_war_lost = {
		effect = {

		}
	}
	
	on_leave_faction = {
		effect = {

		}
	}

	#FROM is the one that joins the faction
	on_create_faction = {
		effect = {

		}
	}

	#FROM is country getting invited.
	on_offer_join_faction = {
		effect = {
			
		}
	}

	#FROM is faction leader on join faction requests.
	on_join_faction = {
		effect = {

		}
	}

	#FROM is war target
	on_declare_war = {
		effect = {
			EXHC_exhaustion_add10 = yes
			
			hidden_effect = {
				delcare_war_events = yes
			}

			###与附庸叛乱的机制一样
			SS_subject_independence_war = yes
			
			every_country = {
				limit = {
					has_guaranteed = FROM
					not = { tag = ROOT }
				}
				country_event = { id = gen.14 days = 1 }
			}
			#hkr
			if = {
				limit = {
					tag = HKR
					FROM = {
						tag = MSD
					}
					MSD = {
						has_war_with = MRS
					}
				}
				set_country_flag = HKR_beici
			}
			#hum denfence
			if = {
				limit = {
					FROM = {
						tag = HUM
						has_idea = HUM_youkai_influence 
					}
				}
				random_country = {
					limit = {
						has_guaranteed = HUM
						is_in_faction = no
						not = {
							has_war_with = HUM
							tag = ROOT
						}
					}
					country_event = { days = 2 id = hud.1 }
				}
			}
		}
	}
	
	# When a new faction is formed
	on_faction_formed = {
		effect = {

		}
	}
	
	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
		effect = {
			news_event = { id = country_capitulated.0 days = 0 }
		}
	}

	# ROOT is previously capitualted country
	on_uncapitulation = {
		effect = {
		}
	}

	on_government_change = {
		effect = {
	        country_event = glo.3000	
		}
	}

	on_coup_succeeded = {
		effect = {
		}
	}

	#ROOT is winner #FROM gets annexed - This will also fire on_annex
	on_civil_war_end = {
		effect = {
		}
	}

	#ROOT is winner #FROM gets annexed - For civil wars on_civil_war_end is also fired
	on_annex = {
		effect = {
			
		}
	}

	#Not run on a specific country.
on_startup = {
	effect = {
		##########defines#############
		random_country = {
			SS_defines = yes
			power_defines = yes
			outlook_defines = yes
			exhuastion_defines = yes
			FAPO_defines = yes
			HMIF_defines = yes
			set_variable = { global.PO_gensokyo_p = 25}
			teshudibiao = yes
	        power_global_value_generator = yes
	        LS_defines = yes
	        CO_defines = yes
	        CONV_defines = yes
	        region_defines = yes
	        every_state = {
	       		state_value_calculator = yes
		    }
	        
		}	

		every_country = { 
			country_event = glo.2000 #初始化设定
			# add_ideas = debuger_idea
			# every_country = {
			# 	limit = {
			# 		is_subject_of = PREV
			# 	}
			# 	set_variable = { been_annexed_cooldown_of_@PREV = PREV.base_lower_cooldown}
			# }
			every_owned_state = {
				limit = {
					not = { is_core_of = PREV }
				}
				add_compliance = -100
	       		add_resistance = 10
			}
		}

		##########defines#############


		####country_start_up
		random_country = {
			startup_opinion = yes
			startup_outlook = yes
		}

		every_country = {
		    limit = {
		        capital_scope = {
		            not = { is_on_continent = Gensokyo }
		        }
		    }
		    set_variable = { OL_view_value = 90}
		}

		
		####country_start_up
		every_country = {
			country_event = glo.3000 #refresh
			# country_event = glo.1 #welcome
		}
		#scenario choose
		random_country = {
			if = {
		    	limit = {
		     		has_start_date >145.12.30 
		    	}	
		    	set_global_flag = main_scenario

		    	HUM = {	set_variable = { EXHC_current_exhaustion = 100}	}
		    	HKR = {	set_variable = { EXHC_current_exhaustion = 20}	}

		    	SEI = {	set_variable = { EXHC_current_exhaustion = 90}	}
		    	RMI = {	set_variable = { EXHC_current_exhaustion = 30}	}
		    	NIB = {	set_variable = { EXHC_current_exhaustion = 30}	}

		    	NMS = {	set_variable = { EXHC_current_exhaustion = 90}	}
		    	ICR = {	set_variable = { EXHC_current_exhaustion = 70}	}
		    	MNM = {	set_variable = { EXHC_current_exhaustion = 70}	}
		    	AVE = {	set_variable = { EXHC_current_exhaustion = 50}	}
		    	MAM = {	set_variable = { EXHC_current_exhaustion = 50}	}
		    	
		    	KAG = {	set_variable = { EXHC_current_exhaustion = 60}	}
		    	MSD = {	set_variable = { EXHC_current_exhaustion = 60}	}
		    	KOG = {	set_variable = { EXHC_current_exhaustion = 30}	}

		    	SCA = {	set_variable = { EXHC_current_exhaustion = 50}	}
		    	WAK = {	set_variable = { EXHC_current_exhaustion = 15}	}
		    	SHO = {	set_variable = { EXHC_current_exhaustion = 15}	}

		    	CHE = {	set_variable = { EXHC_current_exhaustion = 10}	}
		    	
		    	SBK = {	set_variable = { EXHC_current_exhaustion = 5}	}

		    	ZYD = {	set_variable = { EXHC_current_exhaustion = 75}	}
		    	GH1 = {	set_variable = { EXHC_current_exhaustion = 60}	}

		    	333 = {
		    		add_building_construction = {
						type = bunker
						level = 3
						instant_build = yes
						province = {
						    all_provinces = yes
						    limit_to_border = yes
						}
					}
		    	}
		    	112 = {
		    		add_building_construction = {
						type = bunker
						level = 3
						instant_build = yes
						province = {
						    all_provinces = yes
						    limit_to_border = yes
						}
					}
		    	}
		    	103 = {
		    		add_building_construction = {
						type = bunker
						level = 3
						instant_build = yes
						province = {
						    all_provinces = yes
						    limit_to_border = yes
						}
					}
		    	}
		    	97 = {
		    		add_building_construction = {
						type = bunker
						level = 3
						instant_build = yes
						province = 2691
					}
		    	}
		    	97 = {
		    		add_building_construction = {
						type = bunker
						level = 3
						instant_build = yes
						province = 2314
					}
		    	}

				else = {
			
			    }  
			}
		}


		#daily
		every_country = {
			random_country = {
			    every_state = {
			       	state_value_calculator = yes
			    }
			    power_global_value_generator = yes
		    }

			if = {
		    	limit = {
		    		has_idea = Fairy
		    	}
		    	FAPO_calculator = yes
		    }
		    if = {
		    	limit = {
		    		not = { has_idea = Human }
		    	}
		    	HMIF_daily_changer = yes
		    }

			SS_power_calculator = yes

		    region_daily_check = yes

		    AC_daily_check = yes

		    country_value_calculator_and_manpower_gainer = yes

		    outlook_daily_change = yes
		    
		    LS_daily = yes

		    exhuastion_daily_change = yes
		    
		    power_daily_changer = yes

		    CO_coring_daily = yes

		    CONV_daily = yes

		    state_race_manpower = yes
		}

		#forsmallscenario
		every_country = {
		    limit = {
		        date < 145.12.31
		    }
		    add_ideas = allsmallscenario
		    set_research_slots = 1
		}

		
		
		#scenario choose

		########NMS 人类修正########
		if = {
	        limit = {
	            NMS = { is_ai = no}
	        }
	        HUM = {
	          set_major = yes
	        }
	        EET = {
	          set_major = yes
	        }
	        KOG = {
	          set_major = yes
	        }
	        SRB = {
	          set_major = yes
	        }
	    }

	    ####ahievement on
	    random_country = {
	    	achievement_setting = yes
	    }

	    #english leader
	    random_country = {
	    	english_leader_on = yes #
	    	scenario_setting = yes
	    }
	    #########
	    # every_country = {
	    # 	limit = {
	    # 		is_subject = yes
	    # 		is_ai = yes
	    # 	}
	    # 	random_list = {
	    # 		25 = {
	    # 			set_country_flag = {
	    # 				flag = SSI_sujiduli
	    # 				days = 1000
	    # 				value = 1
	    # 			}
	    # 		}
	    # 		75 = {

	    # 		}
	    # 	}
	    # }
	}
}

	#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	on_state_control_changed = {
		effect = {
			if = {
				limit = {
					FROM = {
						tag = HUM
					}
					ROOT = {
						tag = SRB
						has_country_flag = SRB_quderenleilingdaoquan
					}
				}
				FROM.FROM = {
					add_compliance = 70
				}
			}
		}
	}

	#ROOT is subject FROM is previous overlord
	on_subject_free = {
		effect = {	
			subject_situation_change_list = yes
		}
	}

	#used when puppeting in a peace conference
	#ROOT = nation being puppeted, FROM = overlord
	on_puppet = {
		effect = {
			clr_country_flag = LS_start_lowing
			clr_country_flag = LS_is_cooling_down
			clr_country_flag = LS_cooldown_completed
			subject_situation_change_list = yes
			if = {
				limit = {
					ROOT = {
						has_idea = Human
					}
					FROM = {
						tag = SRB
						has_country_flag = SRB_jiaodaorenleichengxian
					}
				}
				add_ideas = Magician
		        hidden_effect = {
		          set_technology = {
		            human_tech = 0
		          }
		          tech_initialize = yes
		          country_event = glo.3000
		        }
				every_owned_state = {
					limit = {
						check_variable = { ST_present_race = 4}
					}
					set_variable = { ST_present_race = 5 }
				}
			}
		}
	}

	#used when puppeting through the occupied territories menu during peace time (or when releasing from non-core but owned territory, f.e. Britain releasing Egypt)
	#ROOT = nation being released, FROM = overlord
	on_release_as_puppet = {
		effect = {
			subject_situation_change_list = yes
		}
	}

	#ROOT is free nation FROM is releaser
	on_release_as_free = {
		effect = {
			subject_situation_change_list = yes
		}
	}

	on_unit_leader_created = {
		effect = {

		}
	}

	on_unit_leader_level_up = {
		effect = {
			
		}
	}
	
	# From is owner country
	on_army_leader_daily = {
		effect = {
			if = {
				limit = {
					check_variable = { random < 0.02 }
					NOT = { has_trait = sick }
					set_temp_variable = { temp = sum_unit_terrain_modifier@sickness_chance }
					divide_temp_variable = { temp = num_units }
					check_variable = { temp > 0.75 }
					NOT = { has_unit_leader_flag = recently_sick }
				}
				add_timed_unit_leader_trait = {
					trait = sick
					days = 30
				}
				unit_leader_event = { id = generic.17 }
			}
		}
	}

	on_army_leader_won_combat = {
		effect = {
			if = {
				limit = {
					set_temp_variable = { chance = 0.001 }
					set_temp_variable = { factor = 1.0 }
					add_to_temp_variable = { factor = leader_modifier@wounded_chance_factor } 
					multiply_temp_variable = { chance = factor }
					check_variable = { random < chance }
					NOT = { has_trait = wounded }
				}
				add_timed_unit_leader_trait = {
					trait = wounded
					days = 90
				}
				unit_leader_event = { id = generic.18 }
			}
		}
	}
	
	# From is owner country
	on_army_leader_lost_combat = {
		effect = {
			if = {
				limit = {
					set_temp_variable = { chance = 0.001 }
					set_temp_variable = { factor = 1.0 }
					add_to_temp_variable = { factor = leader_modifier@wounded_chance_factor } 
					multiply_temp_variable = { chance = factor }
					check_variable = { random < chance }
					NOT = { has_trait = wounded }
				}
				add_timed_unit_leader_trait = {
					trait = wounded
					days = 90
				}
				unit_leader_event = { id = generic.18 }
			}
		}
	}
	
	
	on_army_leader_promoted = {
		effect = {
			add_timed_unit_leader_trait = {
				trait = recently_promoted
				days = 100
			}
		}	
	}

	# Scope is the country owner of the PotF, FROM is the country of the killer
	on_pride_of_the_fleet_sunk = {

	}

	#ROOT is subject FROM is overlord
	on_subject_annexed = {
		effect = {

		}
	}

	#ROOT is winner #FROM is loser
	on_peaceconference_ended = {
		effect = {
			
		}
	}

	#Root is exile
	#From is new host
	#FromFrom is old host
	on_host_changed_from_capitulation = {
		effect = {
			#Transfer exile leaders to new host
			From.From = {
				every_army_leader = {
					limit = { is_exiled_leader_from = Root }
					set_nationality = Root.From
				}
			}
		}
	}

	#Root is exile
	#From is old host
	on_exile_government_reinstated = {
		effect = {
			From = {
				every_army_leader = {
					limit = { is_exiled_leader_from = Root }
					set_nationality = Root
				}
			}
			Root = {
				every_army_leader = {
					limit = { is_exiled_leader_from = Root }
					remove_unit_leader_trait = exiled_leader
					remove_exile_tag = yes
				}
			}
		}
	}

	on_government_exiled = {
		effect = {

		}
	}

	# FROM is the sinker, ROOT is the owner of the ship being sunk
	on_sunk_pride = {
		effect = {

		}
	}

	#ROOT is winner #FROM gets annexed - This fires just before FROM gets annexed, meaning the country and everything it owns still exists. It will also fire on_annex and on_civil_war_end
	on_civil_war_end_before_annexation = {
		effect = {
		}
	}

}
